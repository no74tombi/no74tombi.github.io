<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>latex | Tomoya Hirakawa</title>
    <link>https://no74tombi.github.io/tags/latex/</link>
      <atom:link href="https://no74tombi.github.io/tags/latex/index.xml" rel="self" type="application/rss+xml" />
    <description>latex</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 22 Jan 2020 17:14:59 +0900</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>latex</title>
      <link>https://no74tombi.github.io/tags/latex/</link>
    </image>
    
    <item>
      <title>論文締切前日にやる超速TeX環境構築</title>
      <link>https://no74tombi.github.io/post/latex_preparation/</link>
      <pubDate>Wed, 22 Jan 2020 17:14:59 +0900</pubDate>
      <guid>https://no74tombi.github.io/post/latex_preparation/</guid>
      <description>&lt;p&gt;こんにちは, hiratchi です.
皆さんも, 締切前日にWord で書いていた文書をTeXで書き直さなくてはならないことって多いと思います(ない).
僕もそうでした.
この記事では僕が約30分（ネット環境に大きく依存）で行った超速であり超適当なLaTeX 導入を備忘録的にメモします.
パッケージマネージャとして&lt;code&gt;apt&lt;/code&gt; を採用しているUbuntu とかでも出来るような気がしてますがやるのは自己責任でお願いします.&lt;/p&gt;
&lt;h2 id=&#34;導入&#34;&gt;導入&lt;/h2&gt;
&lt;p&gt;なんと言っても&lt;code&gt;texlive&lt;/code&gt;ですよね.
ってことでとりあえずインストールします.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$sudo apt install texlive-full
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ネットの環境によってはかなり時間がかかるし通信量もごっそり持ってかれます(5GB程度).
僕は学校のネット使って&lt;code&gt;texlive-full&lt;/code&gt;をインストールしました, ごめんなさい.
日本語関連ものだけでいい！って人は上記の代わりに以下で良いです.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$sudo apt install texlive-lang-japanese
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;さて, 上記のいずれかをインストールできたらもう終わったようなもんです.
僕はいつもTeX文書を書くときにはTeXstudio を使っています.
スペルチェックもできるし, ウィザードで図の挿入や簡単な表の挿入もできちゃいます.
ので, こいつを入れちゃいます.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;sudo apt install texstudio
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;これで完了です.
コマンドラインで&lt;code&gt;texstudio&lt;/code&gt; と打てば起動するはずです.&lt;/p&gt;
&lt;h2 id=&#34;設定&#34;&gt;設定&lt;/h2&gt;
&lt;p&gt;実際に起動し, TeXをコンパイルしようとするとエラーがドヒャっと出てきて, ちびると思いますのでTeXstudio の設定もしときます.
いろいろなサイトを参考にできちゃう人はそれでいいです.
&lt;code&gt;Options &amp;gt; Configure TeXstudio...&lt;/code&gt; で設定いじれますのでココをいろいろ変えてきます.&lt;/p&gt;
&lt;p&gt;まずは&lt;code&gt;Commands&lt;/code&gt;タブです.
ここでは, LatexやBibTexのコマンド等を設定します.
デフォルトから変わってないところのほうが多いです.
&lt;img src=&#34;texstudio_setting.png&#34; alt=&#34;TeXStudio Commands の設定&#34;&gt;
具体的には,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LaTeX: &lt;code&gt;latex&lt;/code&gt; を &lt;code&gt;uplatex&lt;/code&gt; に変更, &lt;code&gt;-src&lt;/code&gt; を &lt;code&gt;-synctex=1&lt;/code&gt; に変更&lt;/li&gt;
&lt;li&gt;DviPdf: &lt;code&gt;dvipdfm&lt;/code&gt; を &lt;code&gt;dvipdfmx -f textfonts.map %.dvi&lt;/code&gt; に変更&lt;/li&gt;
&lt;li&gt;BibTeX: &lt;code&gt;bibtex&lt;/code&gt; を &lt;code&gt;upbibtex&lt;/code&gt; に変更&lt;/li&gt;
&lt;li&gt;Biber:  &lt;code&gt;biber&lt;/code&gt; を &lt;code&gt;biber --bblencoding=utf8 -u -U --output_safechars&lt;/code&gt; に変更&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こんな感じでしょうか, DviPdf の設定に関して言えば, フォントを埋め込む必要のない方は「&lt;code&gt;dvipdfm&lt;/code&gt; を &lt;code&gt;dvipdfmx&lt;/code&gt; に変更」と読み替えておいてください.&lt;/p&gt;
&lt;p&gt;次にビルドの設定をします.
TeXstudio ではコンパイルして画面の右側にプレビューを表示してくれます.
&lt;code&gt;Build&lt;/code&gt; タブに切り替えて, &lt;code&gt;Build &amp;amp; View&lt;/code&gt; の部分を &lt;code&gt;DVI-&amp;gt;PDF Chain&lt;/code&gt; に変更しておきます.&lt;/p&gt;
&lt;p&gt;僕がやった設定は以上です.&lt;/p&gt;
&lt;h2 id=&#34;最後に&#34;&gt;最後に&lt;/h2&gt;
&lt;p&gt;備忘録的記事なので必然的に雑記事になってしまいました.
結果的に誰得な記事になっちゃいましたが, 急にTeX 環境が必要になったあなたの力になれたら幸いです.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
